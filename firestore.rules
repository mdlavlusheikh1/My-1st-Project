rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // DEVELOPMENT MODE - TEMPORARILY PERMISSIVE RULES
    // TODO: Restore production rules after testing
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function hasRole(role) {
      return isAuthenticated() && getUserData().role == role;
    }
    
    function hasAnyRole(roles) {
      return isAuthenticated() && getUserData().role in roles;
    }
    
    // Temporarily allow all authenticated operations for development
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
    
    // Allow user creation during signup (even without authentication)
    match /users/{userId} {
      allow create: if true; // Allow signup without authentication
      allow read, write: if isAuthenticated();
    }
  }
}